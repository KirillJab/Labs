//---------------------------------------------------------------------------

#pragma hdrstop

#include "MyVariantTable.h"
#include "string"
//---------------------------------------------------------------------------
#pragma package(smart_init)

void MyHashTable::Print(TMemo* Memo)
{
	for(int i = 0; i < this->size; i++)
	{
		AnsiString str = IntToStr(i) + ": ";
		if (!table[i].Empty())
		{
			Item* temp = table[i].Back();
			while(temp)
			{
				str += "|" + IntToStr(temp->key) + "| ";
				temp = temp->next;
			}
		}
		Memo->Lines->Add(str);
	}
}

void MyHashTable::Delete(int k1, int k2)
{
	for(int i = 0; i < this->size; i++)
	{
		if (!table[i].Empty())
		{
			Item* temp = table[i].Back();
			while(temp)
			{
				if (K1 <= temp->key && temp->key <= K2)
				{
                    DeleteNode(temp->key);
				}
			}
		}
		Memo->Lines->Add(str);



		if(!table[i]->Empty())
		{
			if(stack->tail->key == key)
			{
				stack->Pop();
			}
			while (!stack->Empty())
			{
				if(stack->Back()->key == key)
				{
					stack->Pop();
				}
				stack->tail = stack->Back()->next;
			}
			return true;
		}
	}
	return false;
}
