//---------------------------------------------------------------------------

#pragma hdrstop

#include "HashTable.h"

//---------------------------------------------------------------------------
#pragma package(smart_init)


int HashTable::GetHashCode(int key)
{
	return key % size;
}

Stack* HashTable::FindStack(int key)
{
	Stack* stack = &table[GetHashCode(key)];
	return stack;
}

void HashTable::AddNode(int key)
{
	Stack* stack = FindStack(key);
	stack->Push(key);
}

void HashTable::DeleteNode(int key)
{
	Stack* stack = FindStack(key);
	if(!stack->Empty())
	{
		while(!stack->Empty() && stack->Back()->key == key)
		{
			stack->Pop();
		}
		if(stack->Empty())
		{
			return;
		}

		Item* temp = table[i].Back();
		while(temp)
		{
			if (temp->key == key)
			{
				DeleteNode(temp->key);
			}
			temp = temp->next;
		}
	}
}
