//---------------------------------------------------------------------------

#pragma hdrstop

#include "_Square.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

void _Square::OnMouseUp(TStaticText* TextX, TStaticText* TextY, TStaticText* AreaText, TStaticText* PerimetrText, TCanvas* Canvas, int X, int Y)
{
	if(!inFigure)
	{
		if (abs(x2 - x1) > abs(y2 - y1))
		{
			x2 = x1 + y2 - y1;
		}
		else
		{
			y2 = y1 + x2 - x1;
		}
		Canvas->Rectangle(x1, y1, x2, y2);

		TextX->Caption = X;
		TextY->Caption = Y;
	}
	move = false;
	inFigure = false;
}

void _Square::OnMouseMove (TStaticText* TextX, TStaticText* TextY, TStaticText* AreaText, TStaticText* PerimetrText, TCanvas* Canvas, int X, int Y)
{
	if(move)
	{
		Canvas->Pen->Color = clWhite;
		Canvas->Rectangle(x1, y1, x3, y3);
		x2 = X;
		y2 = Y;
		Canvas->Pen->Color = clBlack;
		if (abs(x2 - x1) > abs(y2 - y1))
		{
			x2 = x1 + y2 - y1;
		}
		else
		{
			y2 = y1 + x2 - x1;
		}
		Canvas->Rectangle(x1, y1, x2, y2);
		x3 = x2;
		y3 = y2;

		TextX->Caption = X;
		TextY->Caption = Y;
		calc();
		TextX->Caption = x2;
		TextY->Caption = y2;
		PerimetrText->Caption = perimetr;
		AreaText->Caption = area;
	}
	if(inFigure)
	{
		Canvas->Pen->Color = clWhite;
		Canvas->Rectangle(x1, y1, x3, y3);
		x2 = X;
		y2 = Y;
		Canvas->Pen->Color = clBlack;
		if (abs(x2 - x1) > abs(y2 - y1))
		{
			x2 = x1 + y2 - y1;
		}
		else
		{
			y2 = y1 + x2 - x1;
		}
		Canvas->Rectangle(x1, y1, x2, y2);
		x3 = x2;
		y3 = y2;
	}
}
