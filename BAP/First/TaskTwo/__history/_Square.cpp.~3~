//---------------------------------------------------------------------------

#pragma hdrstop

#include "_Square.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)

void _Rectangle::OnMouseUp(TStaticText* TextX, TStaticText* TextY, TStaticText* AreaText, TStaticText* PerimetrText, TCanvas* Canvas, int X, int Y)
{
	if(!inFigure)
	{
		x2 = X;
		y2 = Y;
		Canvas->Pen->Color = clBlack;
		Canvas->Rectangle(x1, y1, x2, y2);

		TextX->Caption = X;
		TextY->Caption = Y;
	}
	move = false;
	inFigure = false;
}

void _Rectangle::OnMouseMove (TStaticText* TextX, TStaticText* TextY, TStaticText* AreaText, TStaticText* PerimetrText, TCanvas* Canvas, int X, int Y)
{
	if(move)
	{
		Image->Canvas->Pen->Color = clWhite;
		Image->Canvas->Rectangle(X1, Y1, X3, Y3);
		X2 = X;
		Y2 = Y;
		Image->Canvas->Pen->Color = clBlack;
		if (abs(X2 - X1) > abs(Y2 - Y1))
		{
			X2 = X1 + Y2 - Y1;
		}
		else
		{
			Y2 = Y1 + X2 - X1;
		}
		Image->Canvas->Rectangle(X1, Y1, X2, Y2);
		X3 = X2;
		Y3 = Y2;

		TextX->Caption = X;
		TextY->Caption = Y;
		calc();
		TextX->Caption = x2;
		TextY->Caption = y2;
		PerimetrText->Caption = perimetr;
		AreaText->Caption = area;
	}
	if(inFigure)
	{
		Image->Canvas->Pen->Color = clWhite;
		Image->Canvas->Rectangle(X1, Y1, X3, Y3);
		X2 = X;
		Y2 = Y;
		Image->Canvas->Pen->Color = clBlack;
		if (abs(X2 - X1) > abs(Y2 - Y1))
		{
			X2 = X1 + Y2 - Y1;
		}
		else
		{
			Y2 = Y1 + X2 - X1;
		}
		Image->Canvas->Rectangle(X1, Y1, X2, Y2);
		X3 = X2;
		Y3 = Y2;
	}
}




                  /*
if (abs(x2 - x1) > abs(y2 - y1))
				{
					x2 = x1 + y2 - y1;
				}
				else
				{
					y2 = y1 + x2 - x1;
				}
				Canvas->Rectangle(x1, y1, x2, y2);
				*/
